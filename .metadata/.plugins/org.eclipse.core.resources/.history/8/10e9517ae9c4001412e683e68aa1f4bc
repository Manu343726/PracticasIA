package jess;

import java.util.Scanner;

import jess.Deffacts;
import jess.Fact;
import jess.JessException;
import jess.Rete;
import jess.Value;

public class JessToJava {
	private static Rete _rete;
	private static String _sourceFile;
	private static final Scanner read = new Scanner(System.in);
	private static final String[] MESSG = {
		"¿En qué época del año quiere viajar?",
		"¿Cuanto es su presupuesto?",
		"¿Tiene usted alguna afición?",
		"¿Qué edad tiene usted?",
		"¿Viajará acompañado?",
		"¿Quiere un viaje exótico?",
		"¿De qué continente procede?",
		"¿Qué idioma habla?"
	};
	private static final String[] NOMVALUE ={
		"season",
		"budget",
		"hobby",
		"age",
		"companion",
		"exotic",
		"continent",
		"languages"		
	};
	
	/**
	 * Constructora de la clase, Inicializa rete y carga el clp.
	 */
	public JessToJava(){
		_rete = new Rete();
		_sourceFile = "viajes.clp";
		loadSource(_sourceFile);
	}
	
	/**
	 * Se encarga de cargar el clp en el rete
	 * 
	 * @param name el nombre del archivo
	 */
	public static void loadSource(String name){
		try{
			Value v = _rete.batch(name);
			System.out.println("Value :"+v);
		}catch (JessException je){
			System.out.println("Error al cargar");
			je.printStackTrace();
		}
	}
	
	public static void main(String[] args) throws JessException {
		JessToJava inst;
		inst = new JessToJava();
		treatInput(_rete);
		reset();
		_rete.setFocus("");
		run();
		_rete.setFocus("");
		run();
		factList();
		halt();
	}
	
	public static void reset() {
		try {
			_rete.reset();
		} catch (JessException je2) {
			System.out.println("Error de reseteo ");

			je2.printStackTrace();
		}
	}
	
	public static void run() {
		try {
			_rete.run();
		} catch (JessException je4) {
			System.out.println("Error de ejecución ");

			je4.printStackTrace();
		}
	}
	
	public static void halt() {
		try {
			_rete.halt();
		} catch (JessException je3) {
			System.out.println("Error de parada ");
		}
	}
	
	/**
	 * Método que se encarga de recoger la información del usuario y mandarsela al rete. 
	 * @param r la instancia de rete.
	 * @throws JessException
	 */
	private static void treatInput(Rete r) throws JessException{
		String userInput;
		Deffacts dff = new Deffacts ("usr", "", r); //Se define un deffacts llamado usr en las reglas 'r'
		Fact f = new Fact("user", r); //Se crea un nuevo fact del tipo User.
		Value[] val = new Value[MESSG.length];
		for(int i = 0; i<MESSG.length;i++){
			System.out.println(MESSG[i]);
			userInput = read.next();
			val[i] = new Value(Integer.parseInt(userInput));
			f.setSlotValue(NOMVALUE[i], val[i]); //añade el Slot con nombre NOMVALUE[i] con valor val[i] al fact de tipo user.
		}
		
		dff.addFact(f); //Añade el fact al deffacts.
		r.addDeffacts(dff); //Añade el deffacts a Rete.
		
	}
	
	public static void factList(){
		//TODO
		@SupressWarnings("rawtypes")
		java.util.Iterator iterator;
		
	}
	
}
